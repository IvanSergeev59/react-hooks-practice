{"version":3,"sources":["components/Navbar.js","components/Card.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/types.js","context/alert/alertReducer.js","context/alert/alertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","exact","to","Card","user","src","avatar_url","alt","login","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onChange","event","target","onKeyPress","key","clearUsers","trim","hide","search","show","Home","loading","users","map","id","About","Repos","repos","Fragment","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","width","Alert","role","text","onClick","SHOW_ALERT","HIDE_ALERT","CLEAR_USERS","GET_REPOS","GET_USER","SEARCH_USERS","SET_LOADING","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","a","setLoading","axios","get","response","data","items","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.881c7cb6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar = () => (\r\n    <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg navbar-1\">\r\n        <div className=\"navbar-brand\">\r\n            Github Поиск\r\n        </div>\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <NavLink exact to=\"/\" className=\"nav-link\">Главная</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to=\"/about\" className=\"nav-link\">Информация</NavLink>\r\n            </li>\r\n        </ul>\r\n            \r\n    </nav>\r\n)","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const Card = ({user}) => (\r\n    <div className=\"card\">\r\n        <img src={user.avatar_url} alt={user.login} className=\"card-img-top\"/>\r\n        <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{user.login}</h5>\r\n                <Link to={'/profile/' + user.login} className=\"btn btn-primary\">Открыть</Link>\r\n        </div>\r\n    </div>\r\n)","import { createContext } from \"react\";\r\n\r\nexport const AlertContext = createContext()             ","import {createContext} from 'react'\r\n\r\nexport const GithubContext = createContext()","import React, {useContext, useState} from 'react'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\nimport { GithubContext } from '../context/github/githubContext'\r\nexport const Search = () => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const alert =useContext(AlertContext)\r\n    const github = useContext(GithubContext)\r\n    const onSubmit = (event) => {\r\n        if (event.key !== 'Enter') {\r\n            return\r\n        }\r\n        github.clearUsers()\r\n        if (value.trim()) {\r\n            alert.hide( )\r\n           github.search(value.trim())\r\n        } else {\r\n            alert.show('Введите данные пользователя!')\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 placeholder=\"Введите ник пользователя...\"\r\n                 value={value}\r\n                 onChange={event => setValue(event.target.value)}\r\n                 onKeyPress={onSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, {Fragment, useContext} from 'react'\r\nimport { Card } from '../components/Card'\r\nimport { Search } from '../components/Search'\r\nimport { GithubContext } from '../context/github/githubContext'\r\n\r\nexport const Home = () => {\r\n\r\n    const {loading, users} = useContext(GithubContext)\r\n    \r\n    return (\r\n        <div>\r\n            <Fragment>\r\n                <Search />\r\n                    <div className=\"row\">\r\n\r\n                        {loading\r\n                            ? <p className=\"text-center\">Загрузка...</p>\r\n                            : users.map(user => {\r\n                                return (\r\n                                    <div className=\"col-sm-4 mb-4\" key={user.id}>\r\n                                        <Card user={user}/>\r\n                                    </div>\r\n                                )\r\n                            })\r\n\r\n                        }\r\n                        \r\n                        \r\n                       \r\n                     \r\n                       \r\n                    </div>\r\n                \r\n            </Fragment>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n        <div className=\"container\">\r\n            <h1 className=\"display-4\">Информация</h1>\r\n            <p className=\"lead\">Версия приложения: <b>1.0.0</b></p>\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Repos = ({repos}) => (\r\n    <React.Fragment>\r\n        {repos.map(repo => (\r\n            <div className=\"card mb-3\" key={repo.id}>\r\n                <div className=\"card-body\">\r\n                    <h5>\r\n                        <a href={repo.html_url} \r\n                        target=\"_blank\" \r\n                        rel=\"noopener noreferrer\">{repo.name}\r\n                        </a>\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        ))}\r\n    </React.Fragment>\r\n)","import React, {useContext, useEffect, Fragment} from 'react'\r\nimport {GithubContext} from '../context/github/githubContext'\r\nimport {Link} from 'react-router-dom'\r\nimport { Repos } from '../components/Repos'\r\n\r\nexport const Profile = ({match}) => {\r\n  const {getUser, getRepos, loading, user, repos} = useContext(GithubContext)\r\n  const urlName = match.params.name\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getUser(urlName)\r\n    getRepos(urlName)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return <p className=\"text-center\">Загрузка...</p>\r\n  }\r\n\r\n  const {\r\n    name, company, avatar_url,\r\n    location, bio, blog,\r\n    login, html_url, followers,\r\n    following, public_repos,\r\n    public_gists\r\n  } = user\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/\" className=\"btn btn-link\">На главную</Link>\r\n\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3 text-center\">\r\n              <img\r\n                src={avatar_url}\r\n                alt={name}\r\n                style={{width: '150px'}}\r\n              />\r\n              <h1>{name}</h1>\r\n              {location && <p>Местоположение: {location}</p>}\r\n            </div>\r\n            <div className=\"col\">\r\n              {\r\n                bio && <Fragment>\r\n                  <h3>BIO</h3>\r\n                  <p>{bio}</p>\r\n                </Fragment>\r\n              }\r\n              <a\r\n                href={html_url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-dark\"\r\n              >Открыть профиль</a>\r\n              <ul>\r\n                {login && <li>\r\n                  <strong>Username: </strong> {login}\r\n                </li>}\r\n\r\n                {company && <li>\r\n                  <strong>Компания: </strong> {company}\r\n                </li>}\r\n\r\n                {blog && <li>\r\n                  <strong>Website: </strong> {blog}\r\n                </li>}\r\n              </ul>\r\n\r\n              <div className=\"badge badge-pill badge-primary\">Подписчики: {followers}</div>\r\n              <div className=\"badge badge-success\">Подписан: {following}</div>\r\n              <div className=\"badge badge-info\">Репозитории: {public_repos}</div>\r\n              <div className=\"badge badge-dark\">Gists: {public_gists}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Repos repos={repos}/>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\n\r\nexport const Alert = () => {\r\n    const {alert, hide} = useContext(AlertContext)\r\n\r\n    if (!alert) return null\r\n\r\n    return (\r\n        <div \r\n            className={`alert alert-${alert.type || 'secondary'} alert-dismissible`} role=\"alert\">\r\n            {alert.text}\r\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\r\n            <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}","export const SHOW_ALERT ='SHOW_ALERT'\r\nexport const HIDE_ALERT ='HIDE_ALERT'\r\nexport const CLEAR_USERS= 'CLEAR_USERS'\r\nexport const GET_REPOS= 'GET_REPOS'\r\nexport const GET_USER= 'GET_USER'\r\nexport const SEARCH_USERS= 'SEARCH_USERS'\r\nexport const SET_LOADING= 'SET_LOADING'\r\n","import { HIDE_ALERT, SHOW_ALERT } from \"../types\"\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT]: (state, action) => action.payload,\r\n    [HIDE_ALERT]: () => null,\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n        const handler = handlers[action.type] || handlers.DEFAULT\r\n        return handler(state, action)\r\n}","import React, {useReducer} from 'react'\r\nimport { HIDE_ALERT, SHOW_ALERT } from '../types'\r\nimport { AlertContext } from './alertContext'\r\nimport { alertReducer } from './alertReducer'\r\n\r\nexport const AlertState = ({children}) => {\r\n    const [state, dispatch] = useReducer(alertReducer, null)\r\n\r\n    const hide = () => dispatch({type: HIDE_ALERT})\r\n\r\n    const show = (text, type='secondary') =>  {\r\n        dispatch({\r\n            type:SHOW_ALERT,\r\n            payload:{type, text}\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            hide, show, alert: state\r\n        }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}","import { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from \"../types\"\r\n\r\nconst handlers = {\r\n    [SEARCH_USERS]: (state, {payload}) => ({...state, users: payload, loading:false}),\r\n    [GET_REPOS]: (state, {payload}) => ({...state, repos: payload, loading:false}),\r\n    [GET_USER]: (state, {payload}) => ({...state, user: payload, loading:false}),\r\n    [SET_LOADING]: (state) => ({...state, loading: true}),\r\n    [CLEAR_USERS]: (state) => ({...state, users: []}),\r\n    DEFAULT:state => state\r\n}\r\n\r\nexport const githubReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state,action)\r\n}","import React, {useReducer}  from 'react'\r\nimport axios from 'axios'\r\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from '../types'\r\nimport { GithubContext } from './githubContext'\r\nimport { githubReducer } from './githubReducer'\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\r\n\r\nconst withCreds = url => {\r\n    return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n}\r\n\r\nexport const GithubState = ({children}) => {\r\n    const initialState = {\r\n        user:{},\r\n        users:[],\r\n        loading:false,\r\n        repos:[]\r\n    }\r\n    const [state, dispatch] = useReducer(githubReducer, initialState)\r\n\r\n    const search = async value => {\r\n        setLoading()\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/search/users?q=${value}&`)\r\n        )\r\n        dispatch({\r\n            type:SEARCH_USERS,\r\n            payload: response.data.items\r\n        })\r\n    }\r\n    const getUser = async name => {\r\n        setLoading()\r\n\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/users/${name}?`)\r\n\r\n        )\r\n\r\n        dispatch({\r\n            type:GET_USER,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const getRepos = async name => {\r\n        setLoading()\r\n\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\r\n\r\n        )\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\nconst clearUsers = () => dispatch({type:CLEAR_USERS})\r\n\r\nconst setLoading= () => dispatch({type: SET_LOADING})\r\n\r\n\r\n\r\nconst {user, users, repos, loading} = state\r\n\r\n    return (\r\n        <GithubContext.Provider value= {{\r\n            setLoading, search, getUser, getRepos, clearUsers, user, users, repos, loading\r\n        }}>\r\n            {children}\r\n        </GithubContext.Provider>\r\n    )\r\n}","import React from 'react'\nimport { Navbar } from './components/Navbar'\nimport { Home } from './pages/Home'\nimport { About } from './pages/About'\nimport { Profile } from './pages/Profile'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport { Alert } from './components/Alert'\nimport {AlertState} from  './context/alert/alertState'\nimport { GithubState } from './context/github/GithubState'\n\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert alert={{text: 'Test alert'}}/>\n            <Switch>\n              <Route path=\"/\" exact component={Home}/>\n              <Route path=\"/about\" component={About}/>\n              <Route path=\"/profile/:name\" component={Profile}/>\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}